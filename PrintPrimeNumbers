/*
1    2     3    4    5   6
7    8     9    10   11  12 
13   14    15   16   17  18
19   20    21   22   23  24
25   26    27   28   29  30

If you observe prime numbers are existed only in First row , third row and fifth row . 

  %2 == 0 not a prime we can eliminate 
  %3 == 0 is not a prime 

  %4 is already covered by %2 
  
*/
  







//print(seenTwiceNums)
//Print prime nums fron 1 to n 
let n=40
var primVals = [Int]()
for i in 2..<n {
  if isPrime(i){
     primVals.append(i)
  }

}
//print(primVals)

func isPrime(_ n: Int) -> Bool {
   if n <= 1 {
    return false
   }
  if n<=3 {
    return true
  }
    if (n%2 == 0 || n%3 == 0){
      return false
    }
     var i = 5
     while i * i <= n {
       if n % i == 0 || n % (i+2) == 0 {
        return false
       }
       i = i+6
     }
    return true
}
